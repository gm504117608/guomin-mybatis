<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2009-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
    <!--<typeHandlers>-->
        <!--&lt;!&ndash;-->
            <!--当配置package的时候，mybatis会去配置的package扫描TypeHandler-->
            <!--<package name="com.dy.demo"/>-->
            <!--handler属性直接配置我们要指定的TypeHandler &ndash;&gt;-->
        <!--<typeHandler handler=""/>-->
        <!--&lt;!&ndash; javaType 配置java类型，例如String, 如果配上javaType, 那么指定的typeHandler就只作用于指定的类型 &ndash;&gt;-->
        <!--<typeHandler javaType="" handler=""/>-->
        <!--&lt;!&ndash; jdbcType 配置数据库基本数据类型，例如varchar, 如果配上jdbcType, 那么指定的typeHandler就只作用于指定的类型  &ndash;&gt;-->
        <!--<typeHandler jdbcType="" handler=""/>-->
        <!--&lt;!&ndash; 也可两者都配置 &ndash;&gt;-->
        <!--<typeHandler javaType="" jdbcType="" handler=""/>-->
    <!--</typeHandlers>-->

    <settings>
        <setting name="defaultExecutorType" value="SIMPLE"/>
        <setting name="useGeneratedKeys" value="true"/>
    </settings>

    <typeAliases>
        <typeAlias type="guonima.configuration.Person" alias="Person"/>
    </typeAliases>

    <!-- 多数据源配置 -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC">
                <property name="" value=""/>
            </transactionManager>
            <dataSource type="UNPOOLED">
                <property name="driver" value="org.hsqldb.jdbcDriver"/>
                <property name="url" value="jdbc:hsqldb:mem:cache"/>
                <property name="username" value="sa"/>
            </dataSource>
        </environment>

        <environment id="development2">
            <transactionManager type="JDBC">
                <property name="" value=""/>
            </transactionManager>
            <dataSource type="UNPOOLED">
                <property name="driver" value="org.hsqldb.jdbcDriver"/>
                <property name="url" value="jdbc:hsqldb:mem:cache"/>
                <property name="username" value="sa"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <!-- 第一种方式：通过resource指定 -->
        <!--<mapper resource="com/dy/dao/userDao.xml"/>-->

        <!-- 第二种方式， 通过class指定接口，进而将接口与对应的xml文件形成映射关系
                不过，使用这种方式必须保证 接口与mapper文件同名(不区分大小写)，
                我这儿接口是UserDao,那么意味着mapper文件为UserDao.xml -->

        <mapper class="guonima.configuration.PersonMapper"/>

        <!-- 第三种方式，直接指定包，自动扫描，与方法二同理
        <package name="com.dy.dao"/>
        -->
        <!-- 第四种方式：通过url指定mapper文件位置
        <mapper url="file://........"/>
         -->
    </mappers>

</configuration>